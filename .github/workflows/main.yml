name: Main Configuration file for orchestration of pipeline

on:
  workflow_call:

jobs:
  Run-Tests:
    if: ${{ GITHUB.event_name == 'pull_request' }}
    uses: ts-software-solutions/shared-workflows/.github/workflows/build-test.yml@main
    secrets: inherit

  Build-And-Publish:
    if: ${{ GITHUB.event_name != 'pull_request' }}
    uses: ts-software-solutions/shared-workflows/.github/workflows/build-test.yml@main
    secrets: inherit
    with:
      build-test: 'build'

  Deploy-to-DEV:
    if: ${{ GITHUB.event_name != 'pull_request' && GITHUB.ref_name != 'main'}}
    needs: [Build-And-Publish]
    uses: ts-software-solutions/shared-workflows/.github/workflows/deploy.yml@main
    secrets:
      CRYPTO_KEY: ${{ secrets.MULE_DEV_CRYPTO_KEY }} 
      MULE_CLIENT_ID: ${{ secrets.MULE_CLIENT_ID }} 
      MULE_CLIENT_SECRET: ${{ secrets.MULE_CLIENT_SECRET }} 
      ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }} 
      ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }} 
      GH_PAT: ${{ secrets.GH_PAT }} 
    with: 
      mule-env: 'DEV'
      short-sha: ${{ needs.Build-And-Publish.outputs.short-sha }}
      release-branch: ${{ needs.Build-And-Publish.outputs.release-branch }}
  
  Deploy-to-UAT:
    if: ${{ GITHUB.event_name != 'pull_request' && GITHUB.ref_name != 'main'}}
    needs: [Build-And-Publish, Deploy-to-Dev]
    uses: ts-software-solutions/shared-workflows/.github/workflows/deploy.yml@main
    secrets: 
      CRYPTO_KEY: ${{ secrets.MULE_DEV_CRYPTO_KEY }} 
      MULE_CLIENT_ID: ${{ secrets.MULE_CLIENT_ID }} 
      MULE_CLIENT_SECRET: ${{ secrets.MULE_CLIENT_SECRET }} 
      ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }} 
      ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }} 
      GH_PAT: ${{ secrets.GH_PAT }} 
    with: 
      mule-env: 'UAT'
      short-sha: ${{ needs.Build-And-Publish.outputs.short-sha }}
      release-branch: ${{ needs.Build-And-Publish.outputs.release-branch }}
  
  Deploy-to-PROD:
    if: ${{ GITHUB.event_name != 'pull_request' && !cancelled() && needs.Build-And-Publish.result == 'success' }}
    needs: [Build-And-Publish, Deploy-to-Dev, Deploy-to-UAT]
    uses: ts-software-solutions/shared-workflows/.github/workflows/deploy.yml@main
    secrets: 
      CRYPTO_KEY: ${{ secrets.MULE_PROD_CRYPTO_KEY }} 
      MULE_CLIENT_ID: ${{ secrets.MULE_CLIENT_ID }} 
      MULE_CLIENT_SECRET: ${{ secrets.MULE_CLIENT_SECRET }} 
      ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }} 
      ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }} 
      GH_PAT: ${{ secrets.GH_PAT }} 
    with: 
      mule-env: 'PROD'
      short-sha: ${{ needs.Build-And-Publish.outputs.short-sha }}
      release-branch: ${{ needs.Build-And-Publish.outputs.release-branch }}

  Branch-Cleanup:
    if: ${{ GITHUB.event_name != 'pull_request' && !cancelled() && needs.Build-And-Publish.result == 'success' && needs.Deploy-to-PROD.result == 'success' }}
    needs: [Build-And-Publish, Deploy-to-PROD]
    uses: ts-software-solutions/shared-workflows/.github/workflows/branch-cleanup.yml@main
    secrets: inherit 
    with:
      release-branch: ${{ needs.Build-And-Publish.outputs.release-branch }}

  Create-Tag:
    if: ${{ GITHUB.event_name != 'pull_request' && !cancelled() && needs.Build-And-Publish.result == 'success' && needs.Deploy-to-PROD.result == 'success' }}
    needs: [Build-And-Publish, Deploy-to-PROD, Branch-Cleanup]
    uses: ts-software-solutions/shared-workflows/.github/workflows/create-tag.yml@main
    secrets: inherit 
    with:
      tag-name: ${{ needs.Build-And-Publish.outputs.short-sha }}