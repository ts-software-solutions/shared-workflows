name: Main Orchestration To deploy and manage a pipeline deploying to MuleSoft

on:
  workflow_call:
    inputs:
      anypoint-org-name:
        description: Organization name that is the target of the deployment
        required: true
        type: string
      dev-env: 
        description: The MuleSoft Development environment name
        required: true
        type: string
      uat-env: 
        description: The MuleSoft UAT environment name
        required: true
        type: string
      prod-env: 
        description: The MuleSoft Production environment name
        required: true
        type: string
      tag-name:
        description: The tag name used in the build stage so the release assets can be fetched
        required: true
        type: string
      mule-deploy-args:
        description: Additional arguments that should be provided during deployment using the mule deploy library from AVIO
        required: false
        type: string
        default: '' 
jobs:
  Run-Tests:
    if: ${{ (GITHUB.ref_name != 'main' && GITHUB.event_name == 'push') || (GITHUB.event_name == 'pull_request')}}
    uses: ts-software-solutions/shared-workflows/.github/workflows/mule-build-test.yml@main
    secrets: inherit
    with:
      test-only: true
      mule-env: ${{ inputs.dev-env }} 

  Build-And-Publish:
    if: ${{ GITHUB.ref_name == 'main' && GITHUB.event_name == 'push'}}
    uses: ts-software-solutions/shared-workflows/.github/workflows/mule-build-test.yml@main
    secrets: inherit
    with:
      test-only: false
      mule-env: ${{ inputs.dev-env }} 
      mule-deploy-args: ${{ inputs.mule-deploy-args }}

  Deploy-To-Dev:
    if: ${{ !cancelled() && !failure() &&  GITHUB.ref_name == 'main' && !inputs.deploy-directly-to-prod }}
    needs: [Build-And-Publish]
    uses: ts-software-solutions/shared-workflows/.github/workflows/mule-deploy.yml@main
    secrets: inherit 
    with:
      tag-name: ${{ inputs.tag }} 
      mule-env: ${{ inputs.dev-env }}
      anypoint-org-name: ${{ inputs.anypoint-org-name }}
      mule-deploy-args: ${{ inputs.mule-deploy-args }}
  
  Deploy-To-UAT:
    if: ${{ !cancelled() && !failure() && GITHUB.ref_name == 'main' && !inputs.deploy-directly-to-prod }}
    uses: ts-software-solutions/shared-workflows/.github/workflows/mule-deploy.yml@main
    needs: [Deploy-To-Dev]
    secrets: inherit
    with:
      tag-name: ${{ inputs.tag }} 
      mule-env: ${{ inputs.uat-env }}
      anypoint-org-name: ${{ inputs.anypoint-org-name }}
      mule-deploy-args: ${{ inputs.mule-deploy-args }}

  Deploy-To-Prod:
    if: ${{ !cancelled() && !failure() && GITHUB.ref_name == 'main' }}
    uses: ts-software-solutions/shared-workflows/.github/workflows/mule-deploy.yml@main
    needs: [Deploy-To-Dev, Deploy-To-UAT]
    secrets: inherit
    with:
      tag-name: ${{ inputs.tag }} 
      mule-env: ${{ inputs.prod-env }}
      anypoint-org-name: ${{ inputs.anypoint-org-name }}
      mule-deploy-args: ${{ inputs.mule-deploy-args }}

  Create-Release:
    if: ${{ !cancelled() &&  !failure() && GITHUB.ref_name == 'main' && GITHUB.event_name == 'push' && needs.Build-And-Publish.result == 'success' && needs.Deploy-to-PROD.result == 'success' }}
    uses: ts-software-solutions/shared-workflows/.github/workflows/mule-create-release.yml@main
    needs: [Build-And-Publish, Deploy-To-Dev, Deploy-To-UAT, Deploy-To-Prod]
    secrets: inherit
    with:
      early-access-tag-name: 'early-access'
      version-to-release: ${{ needs.Build-And-Publish.outputs.released-version }}

